How did viewing a diff between two versions of a file help you see the bug that was introduced?

I learned from lesson one "version-control" that much time can be saved by automating the comparison of differnet versions of files

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I could see quickly where changes/mistakes had been made in differnet versions whuxh would save time thus making me more efficient

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

commitingmanually leaves opne the possibility of human error and forgetting to commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because when building something that requires multiple files to work together you need to compare them against each other at each stage, unlike other situations where individual files bears no relation to one another.

How can you use the commands git log and git diff to view the history of files?

using git logg to view all differnet commits and when they were made/ for what purpose & git diff to view the changes that were made.

How might using version control make you more confident to make changes that could break something?

Using checkout and working in detached head state I know I can make changes that are not permanent.

Now that you have your workspace set up, what do you want to try using Git for?

to start working on projects and hosting my work